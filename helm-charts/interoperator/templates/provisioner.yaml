apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: {{ .Release.Name }}-controller-manager
  name: provisioner
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 0
  selector:
    matchLabels:
      control-plane: {{ .Release.Name }}-controller-manager
  template:
    metadata:
      labels:
        control-plane: {{ .Release.Name }}-controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:9877/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "{{ .Values.interoperator.image.repository }}:{{ .Values.interoperator.image.tag }}"
        imagePullPolicy: {{ .Values.interoperator.image.pullPolicy }}
        name: manager
        resources:
          limits:
            cpu: {{ .Values.interoperator.resources.limits.cpu }}
            memory: {{ .Values.interoperator.resources.limits.memory }}
          requests:
            cpu: {{ .Values.interoperator.resources.requests.cpu }}
            memory: {{ .Values.interoperator.resources.requests.memory }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 9877
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 9877
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: {{ .Release.Name }}-controller-manager
  name: {{ .Release.Name }}-controller-manager-metrics-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: {{ .Release.Name }}-controller-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: provisioner-clusterrolebinding
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: {{ .Release.Namespace }}
    # Reference to upper's `metadata.namespace`
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io